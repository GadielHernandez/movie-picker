---
import HeaderLayout from '../layouts/HeaderLayout.astro';
import Header from '../components/Header.astro';
import Grid from '../components/Grid.astro';
import Category from '../components/Category.tsx';
import CardContainer from '../components/CardContainer.astro';

import { fetchCategories, fillNominateData } from '../models/categories/category.services';
import { setUserSession } from '../lib/auth';
import { getProfile, getProfileSelections } from '../models/profile/profile.services';
import type { IProfileSelections } from '../models/profile/profile.interfaces';

const categories = await fetchCategories(Astro);
categories.data.forEach( category => {
	category.nominates.forEach( nominate => {
		nominate = fillNominateData(nominate);
	})
});

const userSession = await setUserSession(Astro.cookies);
const idProfile = Astro.url.searchParams.get('user')
let currentProfile = userSession || null;

if (idProfile && currentProfile?.id !== idProfile) {
	const profileFinded = await getProfile(idProfile);
	if (profileFinded) currentProfile = profileFinded;
}

let selections: IProfileSelections = {}
let n_selections = 0;
if(currentProfile) {
	selections = await getProfileSelections(currentProfile.id);
	n_selections = Object.keys(selections).length;
}
---

<HeaderLayout 
	title="Movie Tipsters" 
	description="Pagina para hacer quiniela o predicciones de los ganadores de los Oscars 2024" 
	userSession={userSession}
>
	<main class="pb-8">
		<Header profile={currentProfile} currentUserId={userSession?.id} n_selections={n_selections}/>
		<Grid>
			{categories.data.map((category) => (
				<CardContainer 
					relevant={category.relevant}
				>
					<Category 
						client:load
						user={userSession?.id}
						category={category}
						width={category.relevant ? 2 : 1}
						userSelection={selections[category.id]}
						enable={currentProfile?.id === userSession?.id}
					/>
				</CardContainer>
			))}
		</Grid>
	</main>
</HeaderLayout>