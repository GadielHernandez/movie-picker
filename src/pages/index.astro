---
import HeaderLayout from '../layouts/HeaderLayout.astro';
import Header from '../components/Header.astro';
import Grid from '../components/Grid.astro';
import Category from '../components/Category.tsx';

import { fetchCategories } from '../models/categories/category.services';
import { fetchMovies } from '../models/movie/movie.services';
import { fetchPersons } from '../models/person/person.services';

import { setUserSession, getProfile } from '../lib/auth';


const categories = await fetchCategories(Astro);
const movies = await fetchMovies(Astro);
const persons = await fetchPersons(Astro);

categories.data.forEach( category => {
	category.nominates.forEach( nominate => {
		nominate.movie = movies.data.find( movie => movie.id === nominate.movieid)
		if(nominate.personId) nominate.person = persons.data.find( person => person.id === nominate.personId)
	})
});

const userSession = await setUserSession(Astro.cookies);
const idProfile = Astro.url.searchParams.get('user')
let currentProfile = userSession || null;

if (idProfile && currentProfile?.id !== idProfile) {
	const profileFinded = await getProfile(idProfile);
	if (profileFinded) currentProfile = profileFinded;
}
---

<HeaderLayout 
	title="Movie Tipsters" 
	description="Pagina para hacer quiniela o predicciones de los ganadores de los Oscars 2024" 
	profile={currentProfile}
>
	<main>
		<Header profile={currentProfile}/>
		<Grid>
			{categories.data.map((category) => (
				<Category 
					client:load
					category={category}
					width={category.relevant ? 2 : 1}
				/>
			))}
		</Grid>
	</main>
</HeaderLayout>